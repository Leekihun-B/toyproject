<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="BoardMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="boardMap" type="com.java.spring.model.Board">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="filename" column="filename" />
        <result property="insert_date" column="insert_date" />
        <result property="update_date" column="update_date" />
        <result property="last_date" column="last_date" />
        <result property="is_out" column="is_out" />
        
        <result property="user_id" column="user_id" />
    </resultMap>
    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem" parameterType="com.java.spring.model.Board" resultMap="boardMap">
        SELECT id, title, content, filename, insert_date, update_date, last_date, is_out, user_id FROM b_board
        <where>
            <if test="id != null and id != ''">
                id LIKE concat('%', #{id}, '%')
            </if>
            <if test="title != null and title != ''">
                AND title LIKE concat('%', #{title}, '%')
            </if>
            <if test="content != null and content != ''">
                AND content LIKE concat('%', #{content}, '%')
            </if>
            <if test="insert_date != null and insert_date != ''">
                AND insert_date LIKE concat('%', #{insert_date}, '%')
            </if>
            <if test="update_date != null and update_date != ''">
                AND update_date LIKE concat('%', #{update_date}, '%')
            </if>
            <if test="last_date != null and last_date != ''">
                AND last_date LIKE concat('%', #{last_date}, '%')
            </if>
            <if test="is_out != null and is_out != ''">
                AND is_out LIKE concat('%', #{is_out}, '%')
            </if>
            <if test="user_id != null and user_id != ''">
                AND user_id LIKE concat('%', #{user_id}, '%')
            </if>
        </where>
    </select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList" parameterType="com.java.spring.model.Board" resultMap="boardMap">
        SELECT id, title, content, filename, insert_date, update_date, last_date, is_out, user_id FROM b_board
        <where>
            <if test="id != null and id != ''">
                id LIKE concat('%', #{id}, '%')
            </if>
            <if test="title != null and title != ''">
                OR title LIKE concat('%', #{title}, '%')
            </if>
            <if test="content != null and content != ''">
                OR content LIKE concat('%', #{content}, '%')
            </if>
            <if test="insert_date != null and insert_date != ''">
                OR insert_date LIKE concat('%', #{insert_date}, '%')
            </if>
            <if test="update_date != null and update_date != ''">
                OR update_date LIKE concat('%', #{update_date}, '%')
            </if>
            <if test="last_date != null and last_date != ''">
                OR last_date LIKE concat('%', #{last_date}, '%')
            </if>
            <if test="is_out != null and is_out != ''">
                OR is_out LIKE concat('%', #{is_out}, '%')
            </if>
            <if test="user_id != null and user_id != ''">
                OR user_id LIKE concat('%', #{user_id}, '%')
            </if>
        </where>
        ORDER BY id DESC
        
        <if test="listCount > 0">
        	LIMIT #{offset}, #{listCount}
        </if>
    </select>
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem" parameterType="com.java.spring.model.Board" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO b_board (title, content, filename, insert_date, user_id) VALUES (#{title}, #{content}, #{filename}, now(), #{user_id});
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="com.java.spring.model.Board">
		DELETE FROM b_board WHERE id=#{id};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="com.java.spring.model.Board">
		UPDATE b_board SET title=#{title}, content=#{content}, filename=#{filename}, update_date=now() WHERE id=#{id};
	</update>
	
	<!-- 데이터 삭제를 위한 기능 정의 (데이터를 남김) -->
	<update id="updatedeleteItem" parameterType="com.java.spring.model.Board">
		UPDATE b_board SET last_date=now(), is_out='Y' WHERE id=#{id};
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<select id="selectCountAll" parameterType="com.java.spring.model.Board" resultType="int">
        SELECT COUNT(*) FROM b_board
        <where>
            <if test="id != null and id != ''">
                id LIKE concat('%', #{id}, '%')
            </if>
            <if test="title != null and title != ''">
                OR title LIKE concat('%', #{title}, '%')
            </if>
            <if test="content != null and content != ''">
                OR content LIKE concat('%', #{content}, '%')
            </if>
            <if test="insert_date != null and insert_date != ''">
                OR insert_date LIKE concat('%', #{insert_date}, '%')
            </if>
            <if test="update_date != null and update_date != ''">
                OR update_date LIKE concat('%', #{update_date}, '%')
            </if>
            <if test="last_date != null and last_date != ''">
                OR last_date LIKE concat('%', #{last_date}, '%')
            </if>
            <if test="is_out != null and is_out != ''">
                OR is_out LIKE concat('%', #{is_out}, '%')
            </if>
            <if test="user_id != null and user_id != ''">
                OR user_id LIKE concat('%', #{user_id}, '%')
            </if>
        </where>
    </select>
</mapper>